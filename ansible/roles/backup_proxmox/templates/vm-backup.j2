#!/bin/bash

set -eu

####################################################################
### PROXMOX VM BACKUP
### This script is used to perform weekly backup of VMs on a Proxmox server.
### Free to use in your own infrastructure :)
### {{ ansible_managed }} ### DO NOT MODIFY
####################################################################

VM_IDS=("19211" "19208" "19205")
DEST_SERVER="192.168.100.24"
DEST_USER="root"
DEST_PORT="1922"
BACKUP_DIR="/var/lib/vz/dump"
REMOTE_BACKUP_DIR="/home/backup/weekly-backup"
RETENTION_DAYS=1

echo "Empying backup directory..."
rm -rf "$BACKUP_DIR"/*

for VM in "${VM_IDS[@]}"; do
    echo "Starting backup of VM $VM at $(date '+%Y-%m-%d %H:%M:%S')" 
    echo "Stopping VM $VM..."
    qm shutdown $VM
    sleep 10
    vzdump "$VM" --compress zstd --dumpdir "$BACKUP_DIR"
    echo "Removing old backups on the destination server..."
    ssh -p "$DEST_PORT" "$DEST_USER@$DEST_SERVER" "find $REMOTE_BACKUP_DIR -type f -mtime +$RETENTION_DAYS -delete"
    LATEST_BACKUP=$(ls -t "$BACKUP_DIR"/*.vma.zst | head -n 1)
    if [[ -n "$LATEST_BACKUP" ]]; then
        echo "Transferring latest backup: $LATEST_BACKUP to $DEST_USER@$DEST_SERVER:$REMOTE_BACKUP_DIR/"
        rsync -avzrpP -e "ssh -p $DEST_PORT" "$LATEST_BACKUP" "$DEST_USER@$DEST_SERVER:$REMOTE_BACKUP_DIR/"
    else
        echo "No backup file found for VM $VM."
    fi
done

echo "Cleaning up old local backups..."
find "$BACKUP_DIR" -type f -mtime +$RETENTION_DAYS -delete

echo "Starting VM $VM_IDS"
for VM in "${VM_IDS[@]}"; do
    echo "Starting $VM"
    qm start $VM
done

curl -d "[VM BACKUP] Backup completed successfully for VM(s): ${VM_IDS[*]}" {{ snapshot_ntfy_channel }}

echo "Backup script completed at $(date '+%Y-%m-%d %H:%M:%S')"